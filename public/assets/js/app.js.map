{"version":3,"sources":["app.js","app/main-controller.js","app/main-directive.js","app/main-service.js","forms/discover/discover-controller.js","tags/tag-list/tag-list-controller.js","tags/tag-list/tag-list-service.js","forms/post-add/post-add-controller.js","forms/post-add/post-add-service.js","forms/post-edit/post-edit-controller.js","forms/post-edit/post-edit-service.js","posts/post-details/post-details-controller.js","posts/post-details/post-details-directive.js","posts/post-details/post-details-service.js","posts/post-list/post-list-controller.js","posts/post-list/post-list-service.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChrlIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["// app\nvar app = angular.module('stream', [\n    'stream.main',\n    'stream.mains',\n    'stream.maind',\n    'stream.discover',\n    'stream.post_detailsc',\n    'stream.post_details',\n    'stream.post_detailsd',\n    'stream.post_addc',\n    'stream.post-adds',\n    'stream.post_editc',\n    'stream.post-edits',\n    'stream.post_listc',\n    'stream.post_list',\n    'stream.tag_listc',\n    'stream.tag_list',\n    'ngResource',\n    'ui.router',\n    'ngFileUpload',\n    'ui.bootstrap',\n    'ngMaterial'\n]);\n\n// rootscope variables\napp.run(function ($rootScope) {\n    $rootScope.previousState = \"\";\n    $rootScope.newTag = \"\";\n});","angular.module('stream.main', [])\n\n.controller('mainCtrl', function($scope, $rootScope, $location, Main) {\n\n\t$scope.$on('setAuth', function(event, getAuth) {\n\t\t$scope.auth = getAuth.valid;\n\t\t$scope.userId = getAuth.userId;\n\t\t$scope.isAdmin = getAuth.isAdmin;\n\t});\n\n\t$scope.go = function (path) {\n\t \t$location.path(path);\n\t};\n\t\n\t$scope.page = {\n\t\tloaded: false\n\t}\n\t\n\t// get status\n\tMain.getStatus()\n        .success(function(data) {\n\t\t\t$(\".totals .stream-total\").text(data.total.tag);\n\t\t\t$(\".totals .post-total\").text(data.total.post);\n\t\t\tif(typeof data.userTotals === \"object\") {\n\t\t\t\t$(\".user-totals .stream-total\").text(data.userTotals.tag);\n\t\t\t\t$(\".user-totals .post-total\").text(data.userTotals.post);\n\t\t\t\t$(\".user-totals-wrapper .username\").text(data.userTotals.email);\n\t\t\t}\n        });\n\t\t\n\t// get recent tags\n\tMain.getRecentTags()\n\t\t.success(function(data) {\n\t\t\tfor(var i = 0; i < data.length; i++) {\n\t\t\t\t$(\".recent-tags\").append(\"<a href='/tag/\"+data[i].id+\"#/list' style='margin-right:7px;display:inline-block'>\"+data[i].name+\"</a>\");\n\t\t\t}\n\t\t});\n\t\t\n});","angular.module('stream.maind', [])\n  .directive(\"auth\", function() {\n    return {\n      restrict: 'E',\n      scope: {\n        valid: '=valid',\n        userId: '=identity',\n        isAdmin: '=isadmin'\n      },\n      controller: function($scope, $rootScope) {\n        // place directive scope into rootscope\n        var valid = \"\", userId = \"\", isAdmin = \"\";\n        // available on rootscope\n        $rootScope.valid = valid = $scope.valid;\n        $rootScope.userId = userId = $scope.userId;\n        $rootScope.isAdmin = isAdmin = $scope.isAdmin;\n\n        var sendAuth = {\n          \"valid\" : valid,\n          \"userId\" : userId,\n          \"isAdmin\" : isAdmin\n        }\n\n        // available on callback\n        $scope.$emit('setAuth', sendAuth);\n      }\n    }\n  });","angular.module('stream.mains', [])\n\n.factory('Main', function($http) {\n\n    return {\n        \n        getStatus : function() {\n            return $http.get('/api/v1/status');\n        },\n\n        getRecentTags : function() {\n            return $http.get('/api/v1/recentTags');\n        }\n\n    }\n\n});","\nangular.module('stream.discover', [])\n\n.controller('discoverCtrl', function($scope, $rootScope, $http, $location) {\n\n\t$('.stream.overlay').show();\n\t$('body').addClass('hide-interface');\n\t\n\tvar tagResult = \"\", tagName = \"\";\n\t\n\t$scope.createTag = function() {\n\t\t$rootScope.newTag = $scope.tagSearchData.replace(/ /g,'');\n\t}\n\t\n\t$scope.queryTagName = function() {\n\t\treturn $scope.tagSearchData.replace(/ /g,'');\n\t}\n\t\n\t$scope.go = function() {\t\t\n\t\tif(tagResult.length != 0) {\n\t\t\t// go\n\t\t\ttagName = $scope.queryTagName();\n\t\t\tlocation.href = \"/tag/s/\"+tagName+\"#/name\"\n\t\t} else {\n\t\t\t// create\n\t\t\t$scope.createTag();\n\t\t\tlocation.href = \"#/add\";\n\t\t}\t\n\t}\n\t\n\t$scope.tagSearch = function() {\n\t\tif($scope.tagSearchData != \"\") {\n\t\t\tvar term = $scope.tagSearchData.replace(/ /g,'');\n\t\t\treturn $http.get('/api/v1/tagssearch?q='+term)\n\t\t\t.then(function(response) {\n\t\t\t\ttagResult = response.data.tags;\n\t\t\t\tvar postResult = [];\n\t\t\t\tif(tagResult.length === 0) {\n\t\t\t\t\t$(\".create-new-tag\").show();\n\t\t\t\t\t$(\".search-results, .tag-results, .post-results, .tag-header, .post-header\").hide();\n\t\t\t\t\t$(\".tag-results, .post-results\").html(\"\");\n\t\t\t\t} else {\t\t\t\n\t\t\t\t\ttagResult = tagResult.map(function(item) {\n\t\t\t\t\t\tif(item.posts.length > 0) {\n\t\t\t\t\t\t\tArray.prototype.push.apply(postResult, item.posts);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn \"<div><a href=\\\"/tag/\"+item.id+\"#/list\\\" style=\\\"margin-top:2px;display:block\\\">\"+item.name+\"</a></div>\";\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tif(postResult.length > 0) {\n\t\t\t\t\t\tpostResult = postResult.map(function(item) {\n\t\t\t\t\t\t\tvar str = \"<div><a href=\\\"/post/\"+item.id+\"/#/detail\\\" style=\\\"margin-top:10px;display:block;\\\">\"+item.title+\"</a></div>\";\n\t\t\t\t\t\t\t\tstr += \"<div style=\\\"font-size:16px;\\\">\"+item.body.substr(0, 250)+\"...</div>\";\n\t\t\t\t\t\t\treturn str;\n\t\t\t\t\t\t});\n\t\t\t\t\t\t$(\".post-results, .post-header\").show();\n\t\t\t\t\t\t$(\".post-results\").html(postResult);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t$(\".create-new-tag\").hide();\n\t\t\t\t\t$(\".search-results, .tag-results, .tag-header\").show();\n\t\t\t\t\t$(\".tag-results\").html(tagResult);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\t$(\".search-results, .tag-results, .post-results, .tag-header, .post-header, .create-new-tag\").hide();\n\t\t\t$(\".tag-results, .post-results\").html(\"\");\n\t\t}\n\t}\n\t\n\t$scope.closeOverlay = function() {\n\t\t$('.stream.overlay').hide();\n\t\t$('body').removeClass('hide-interface');\n\t\tvar href = location.href;\n\t\tvar firstFrag = href.split(\"#\")[0];\n\t\tlocation.href = firstFrag + \"#/\" + $rootScope.previousState;\t\n\t}\n\n});","angular.module('stream.tag_listc', [])\n\n.controller('tag_listCtrl', function($scope, $rootScope, TagList, $state, $stateParams, $sce) {\n\n\t$scope.state = $state.current.name;\n\t$scope.trustAsHtml = $sce.trustAsHtml;\n\t\n    $('.stream.overlay').hide();\n    $('body').removeClass('hide-interface');\n\n    var tagId = \"\", tagName = \"\";\n\n\tfunction getTagId() {\n\t\tvar href = location.href;\n\t\tvar post = href.split(\"tag\")[1];\n\t\tvar hash = post.split(\"#\")[0]\n\t\tvar id = hash.split(\"/\")[1];\n\t\treturn id;\n\t}\n     \n\tif($scope.state === \"list\") {\n\t\t\n\t\t$rootScope.previousState = \"list\";\n\t\t\n\t\ttagId = getTagId();\n\t\t\n\t\tTagList.getTags(tagId)\n\t\t\t.success(function(data) {\n\t\t\t\t\n\t\t\t\t$scope.tags = data;\n\t\t\t\t$scope.page.loaded = true;\n\t\t\t\t$(\".ng-panel\").css(\"height\",\"auto\");\n\t\t\t});\n\t\t\n\t} else if($scope.state === \"name\") {\t\n\t\t\n\t\t$rootScope.previousState = \"name\";\n\t\t\n\t\tvar url = location.href;\n\t\tvar start = url.indexOf(\"/s/\") + 3;\n\t\tvar end = url.indexOf(\"#\");\n\t\t\n\t\ttagName = url.substring(start, end);\n\t\t\n\t\tTagList.getLikeName(tagName)\n\t\t\t.success(function(data) {\n\t\t\t\tvar parse = data.tags;\t\t\n\t\t\t\t$scope.tags = parse;\n\t\t\t\t$scope.page.loaded = true;\n\t\t\t\t$(\".ng-panel\").css(\"height\",\"auto\");\n\t\t\t});\n\t\t\n\t}\n\t\n});","angular.module('stream.tag_list', [])\n\n.factory('TagList', function($rootScope, $http) {\n\n    return {\n        \n        getTags : function(id) {\n            return $http.get('/api/v1/tag/'+id);\n        },\n        \n        getLikeName : function(tagname) {\n            return $http.get('/api/v1/tagssearch?q='+tagname);\n        }\n\n    }\n\n});","angular.module('stream.post_addc', [])\n\n.controller('post_addCtrl', function($scope, $rootScope, $http, PostAdd, CSRF_TOKEN, $compile) {\n\n\tvar userId = $rootScope.userId, tagResult = \"\";\n\t\n  \tif($rootScope.valid) {\n\t\t$('.stream.overlay').show();\n\t\t$('body').addClass('hide-interface');\n\t\t\n\t\tif($rootScope.newTag != \"\") {\n\t\t\t$(\"input[name='displaystream']\").val($rootScope.newTag);\n\t\t\t$(\"input[name='streamname']\").val($rootScope.newTag);\n\t\t\t$(\".selected-stream\").show();\n\t\t} else {\n\t\t\t// show get stream\n\t\t\t$(\".get-stream\").show();\n\t\t}\n\t\t\n\t} else {\n\t\t// empty template\n\t\t$(\".overlay-wrapper\").html(\"\");\n\t\t$('.stream.overlay').hide();\n\t}\n\t\n\tvar tokenEl = $(\".post-add-form\").find(\"input[name='_token']\");\n\tvar titleEl = $(\".post-add-form\").find(\"input[name='title']\");\n\tvar bodyEl = $(\".post-add-form\").find(\"textarea[name='body']\");\n\tvar streamNameEl = $(\".post-add-form\").find(\"input[name='streamname']\");\n\tvar streamIdEl = $(\".post-add-form\").find(\"input[name='streamid']\");\n    \n    $(\".entry\").keyup(function() {\n        // hide err notification\n        $(\".alert-danger\").hide();\n        // show ready to publish\n        $scope.readyToPublish();\n    });\n\t\n\t// pass token\n\ttokenEl.val(CSRF_TOKEN);\n\t\n\t$scope.selectCurrentStream = function(e) {\n        $(\".alert-danger\").hide();\n\t\t$(\".selected-stream\").show();\n\t\t$(\"input[name='displaystream']\").val($(e.target).data(\"tag\"));\n\t\t$(\"input[name='streamid']\").val($(e.target).data(\"id\"));\n\t\t$(\".tag-results-wrapper\").hide();\n\t\t$(\".get-stream\").hide();\n\t\t$(\".create-new-tag\").hide();\n        // show ready to publish\n        $scope.readyToPublish();\n\t}\n    \n    $scope.selectStream = function(e) {\n        // loop through to find stream\n        $.each($(\".tag-results\").find(\"a\"), function(i, e) {\n            if($(e).text() === $(\"input[name='stream']\").val()) {\n                $(\".alert-danger\").hide();\n                $(\".selected-stream\").show();\n                $(\"input[name='displaystream']\").val($(e).data(\"tag\"));\n                $(\"input[name='streamid']\").val($(e).data(\"id\"));\n                $(\".tag-results-wrapper\").hide();\n                $(\".get-stream\").hide();\n                $(\".create-new-tag\").hide();\n            }\n        })\n        $scope.checkErrs();\n        $scope.readyToPublish();\n    }\n\t\n\t$scope.createNewStream = function(e) {\n\t\t$(\".selected-stream\").show();\n\t\t$(\"input[name='displaystream']\").val($(e.target).data(\"tag\"));\n\t\t$(\"input[name='streamname']\").val($(e.target).data(\"tag\"));\n\t\t$(\".tag-results-wrapper\").hide();\n\t\t$(\".get-stream\").hide();\n\t\t$(\".create-new-tag\").hide();\n        // show ready to publish\n        $scope.readyToPublish();\n\t}\n\t\n\t$scope.changeStream = function() {\n        $(\".create-button\").hide();\n        $(\".select-button\").show();\n\t\t$(\".selected-stream\").hide();\n\t\t$(\"input[name='streamid']\").val(\"0\");\n\t\t$(\"input[name='streamname']\").val(\"0\");\n\t\t$(\".get-stream\").show();\n\t\t// empty all input values\n\t\t$(\".get-stream input[name='stream']\").val(\"\");\n        $scope.readyToPublish();\n\t}\n\t\n\t$scope.tagSearch = function() {\n\t\tif($scope.tagSearchData != \"\") {\n\t\t\tvar term = $scope.tagSearchData.replace(/ /g,'');\n\t\t\treturn $http.get('/api/v1/tagssearch?q='+term)\n\t\t\t.then(function(response) {\n\t\t\t\ttagResult = response.data.tags;\n\t\t\t\tif(tagResult.length === 0) {\n\t\t\t\t\t$(\".create-new-tag\").show();\n                    $(\".create-button\").show();\n                    $(\".select-button\").hide();\n\t\t\t\t\t$(\".tag-results-wrapper\").hide();\n\t\t\t\t\t$(\".tag-results\").html(\"\");\n\t\t\t\t} else {\n\t\t\t\t\ttagResult = tagResult.map(function(item) {\n\t\t\t\t\t\treturn \"<div><a href=\\\"#\\\" ng-click=\\\"selectCurrentStream($event)\\\" data-id=\\\"\"+item.id+\"\\\" data-tag=\\\"\"+item.name+\"\\\" style=\\\"margin-top:2px;display:block\\\">\"+item.name+\"</a></div>\";\n\t\t\t\t\t});\n\t\t\t\t\tvar parseResult = tagResult.join(\"\");\n\t\t\t\t\tvar compiled = $compile(parseResult)($scope);\n\t\t\t\t\t$(\".create-new-tag\").hide();\n                    $(\".create-button\").hide();\n                    $(\".select-button\").show();\n\t\t\t\t\t$(\".tag-results-wrapper\").show();\n                    $(\".tag-results\").show();\n\t\t\t\t\t$(\".tag-results\").html(compiled);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\t$(\".tag-results-wrapper, .tag-results, .create-new-tag, .create-button\").hide();\n\t\t\t$(\".tag-results\").html(\"\");\n\t\t}\t\n\t}\n    \n    $scope.publish = function() {\n        if(!$scope.checkErrs()) {\n            return false;\n        }\n\n        // make sure stream name is lowercase\n        var streamName = streamNameEl.val().toLowerCase();\n\n        // post data\n        var post = {\n            \"_token\": tokenEl.val(),\n            \"userId\": userId,\n            \"title\": titleEl.val(),\n            \"body\": bodyEl.val(),\n            \"streamid\": streamIdEl.val(),\n            \"streamname\": streamName\n        }\n        // use upload method\n        if($scope.files != undefined) {\n            $(\".text-preloader\").show();\n            post.files = $scope.files;\n            PostAdd.upload(post)\n            .success(function(data) {\n                if(data.success === true) {\n                    $scope.closeOverlay();\n                }\t\n            });\n        } else {\n            // use standard post method\n            PostAdd.add(post)\n            .success(function(data) {\n                if(data.success === true) {\n                    $scope.closeOverlay();\n                }\t\n            });    \n        }\n        $(\".edit-button\").prop(\"disabled\", \"disabled\");\n    }\n    \n    $scope.uploadFiles = function (files, errFiles) {\n        $scope.files = files;\n        $scope.errFiles = errFiles;\n    };\n    \n    $scope.deleteFile = function(index) {\n        $scope.files.splice(index, 1);\n    }\n    \n    $scope.checkErrs = function() {\n        var validate = true;\n        // reset\n        $(\".alert-danger\").find(\"ul\").html(\"\");\n        // validates title and body\n        if(titleEl.val() === \"\" || bodyEl.val() === \"\") {\n            $(\".alert-danger\").show();\n            $(\".alert-danger\").find(\"ul\").append(\"<li>Add a title and body</li>\");\n            validate = false;\n        }\n        // validates stream name\n        if(streamNameEl.val() === \"0\" && streamIdEl.val() === \"0\") {\n            $(\".alert-danger\").show();\n            $(\".alert-danger\").find(\"ul\").append(\"<li>Find a stream name</li>\");\n            validate = false;   \n        }\n        return validate;\n    }\n    \n    $scope.readyToPublish = function() {\n        if(titleEl.val() != \"\" && bodyEl.val() != \"\" && (streamNameEl.val() != \"0\" || streamIdEl.val() != \"0\")) {\n            $(\".alert-info\").show();\n        } else {\n            $(\".alert-info\").hide();\n        }\n    }\n\n\t// add image\n\t$scope.addImage = function() {\n\t\t$(\".image-add-group\").show();\n\t\t$(\".post-add-group\").hide();\n\t} \n\t\n\t// go back\n\t$scope.finishPost = function() {\n\t\t$(\".image-add-group\").hide();\n\t\t$(\".post-add-group\").show();\n\t} \n\n\t$scope.closeOverlay = function() {\n\t\t$('.stream.overlay').hide();\n\t\t$('body').removeClass('hide-interface');\n\t\tvar href = location.href;\n\t\tvar firstFrag = href.split(\"#\")[0];\n\t\tlocation.href = firstFrag + \"#/\" + $rootScope.previousState;\t\n\t}\n\n});","angular.module('stream.post-adds', [])\n\n.factory('PostAdd', function($http, Upload, $timeout) {\n\n    return {\n    \tadd: function(data) {\n\t\t    return $http({\n                        method: 'POST',\n                        url: '/api/v1/post', \n                        headers: { 'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8' },\n                        data: data\n                    });  \n    \t},\n    \tupload: function(data) {\n            return Upload.upload({\n                        url: '/api/v1/upload',\n                        data: data,\n                    });\n    \t}\n    }\n\n});","angular.module('stream.post_editc', [])\n\n.controller('post_editCtrl', function($scope, $rootScope, PostEdit, $compile) {\n\n\t/**\n\n\t- show post edit overlay if logged in user and\n\t  post author is the same otherwise remove template\n\t- CRUD edit / get and update / put\n\n\t*/\n\n  \tvar userId = Number($(\".identity-cache\").text());\n      \n    $scope.imagesMax = 4;\n    $scope.filesToDelete = [];\n    $scope.files = [];\n\n  \tif($rootScope.valid && $rootScope.userId === userId) {\n\t\t$('.stream.overlay').show();\n\t\t$('body').addClass('hide-interface');\n\t} else {\n\t\t// empty template\n\t\t$(\".overlay-wrapper\").html(\"\");\n\t\t$('.stream.overlay').show();\n\t}\n\n\tvar postId = \"\", title = \"\", body = \"\";\n\tvar titleEl = $(\".post-edit-form\").find(\"input[name='title']\");\n\tvar bodyEl = $(\".post-edit-form\").find(\"textarea[name='body']\");\n\tvar photoEl = $(\".post-edit-form\").find(\".photo-list\");\n\n\tfunction getPostId() {\n\t\tvar href = location.href;\n\t\tvar post = href.split(\"post\")[1];\n\t\tvar hash = post.split(\"#\")[0]\n\t\tvar id = hash.split(\"/\")[1];\n\t\treturn id;\n\t}\n    \n\tif($rootScope[\"details\"] != undefined) {\n\t\tpostId = $rootScope.details[0].id;\n\t\tuserId = $rootScope.details[0].user_id;\n\t\ttitle = $rootScope.details[0].title;\n\t\tbody = $rootScope.details[0].body;\n\t\tphotos = $rootScope[\"details\"][0].photos;\n\t} else {\n\t\tpostId = getPostId();\n\t\tuserId = $(\".identity-cache\").text();\n\t\ttitle = $(\".title-cache\").text();\n\t\tbody = $(\".body-cache\").text();\n\t\tphotos = JSON.parse($(\".photos-cache\").text());\n\t}\n\n\ttitleEl.val(title);\n\tbodyEl.text(body);\n    for(var p = 0; p < photos.length; p++) {\n    \tvar startFrag = \"<div style='margin-bottom:5px;'>\";\n    \tvar endFrag = \"<button class='btn btn-danger' style='height:38px;font-size:16px' ng-click='deleteSavedFile($event, \"+photos[p].id+\")'>Remove</button></div>\";\n\t\tvar photo = photos[p].url;\n\t\tvar compiled = $compile(startFrag + \"<img src='\"+photo+\"' style='width:100px;margin-right:12px' />\" + endFrag)($scope);\n\t\tphotoEl.append(compiled);\n        $scope.imagesMax--;\n    }\n\n\t$scope.editPost = function() {\n\t\tvar post = {\n\t\t\t\"id\": postId,\n\t\t\t\"userId\": userId,\n\t\t\t\"title\": titleEl.val(),\n\t\t\t\"body\": bodyEl.val(),\n\t\t}\n   \n        if($scope.files != undefined) {\n        \t$(\".text-preloader\").show();\n            post.files = $scope.files;\n            post.filesToDelete = JSON.stringify($scope.filesToDelete);\n            PostEdit.upload(post)\n            .success(function(data) {\n                if(data.success === \"true\") {\n                    $scope.closeOverlay();\n                }\t\n            });\n        } else {\n            // use standard post method\n            post.filesToDelete = JSON.stringify($scope.filesToDelete);\n            PostEdit.save(post)\n            .success(function(data) {\n                $scope.closeOverlay();\n            });   \n        }    \n        $(\".edit-button\").prop(\"disabled\", \"disabled\");\n    };\n\t\n    $scope.uploadFiles = function (files, errFiles) {\n        $scope.files = files;\n        $scope.errFiles = errFiles;\n    };\n\n    $scope.deleteSavedFile = function(event, index) {\n    \t$(event.target).parent().remove();\n    \t$scope.imagesMax++;\n    \t$scope.filesToDelete.push(index);\n    };\n\n    $scope.deleteFile = function(index) {\n        $scope.files.splice(index, 1);\n    }\n    \n\t// add image\n\t$scope.updateImages = function() {\n\t\t$(\".image-edit-group\").show();\n\t\t$(\".post-edit-group\").hide();\n\t} \n\t\n\t// done\n\t$scope.done = function() {\n\t\t$(\".image-edit-group\").hide();\n\t\t$(\".image-add-group\").hide();\n\t\t$(\".post-edit-group\").show();\n\t} \n\t\n\t$scope.closeOverlay = function() {\n\t\t$('.stream.overlay').hide();\n\t\t$('body').removeClass('hide-interface');\n\t\tvar href = location.href;\n\t\tvar firstFrag = href.split(\"#\")[0];\n\t\tlocation.href = firstFrag + \"#/\" + $rootScope.previousState;\t\n\t}\n\n});","angular.module('stream.post-edits', [])\n\n.factory('PostEdit', function($http, Upload, $timeout) {\n\n    return {\n    \tsave: function(data) {\n\n\t\t    return $http({\n\t\t    \tmethod: 'PUT',\n\t\t    \turl: '/api/v1/post/'+data.id, \n\t\t    \tdata: data,\n\t\t    \theaders: { 'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8' }\n\t\t    })\n\t\t\t.success(function(data, status, headers, config) {\n\t\t\t\t//\n\t\t\t})\n\t\t\t.error(function(data, status, headers, config) {\n\t\t\t\t//\n\t\t\t});\n\t\t     \n    \t},\n    \tupload: function(data) {\n            return Upload.upload({\n                        url: '/api/v1/editimages',\n                        data: data,\n                    });\n    \t}\n\n    }\n\n});","angular.module('stream.post_detailsc', [])\n\n.controller('post_detailsCtrl', function($scope, $rootScope, $sce, PostDetails) {\n\n\t$scope.postId = getPostId();\n\t$scope.trustAsHtml = $sce.trustAsHtml;\n\n\t// reset overlay\n\t$('.stream.overlay').hide();\n\t$('body').removeClass('hide-interface');\n\n\t// save previous state\n\t$rootScope.previousState = \"detail\";\n\n\t$scope.page.loaded = false;\n\n\tfunction getPostId() {\n\t\tvar href = location.href;\n\t\tvar post = href.split(\"post\")[1];\n\t\tvar hash = post.split(\"#\")[0]\n\t\tvar id = hash.split(\"/\")[1];\n\t\treturn id;\n\t}\n\n\tfunction saveDetails(data) {\n\t\t$rootScope.details = data;\n\t}\n\n    PostDetails.get($scope.postId)\n        .success(function(data) {\n        \t// save to local scope\n            $scope.details = data;\n            $scope.page.loaded = true;\n            $(\".ng-panel\").css(\"height\",\"auto\");\n            // save to rootScope\n            saveDetails(data);\n        });\n\n});","angular.module('stream.post_detailsd', [])\n  .directive(\"editbutton\", function($rootScope) {\n\n  \t/*\n\n\t- show post edit button if logged in user and\n\t  post author is the same otherwise hide button\n\n\t*/\n\n  \tvar userId = Number($(\".identity-cache\").text());\n\n  \tif($rootScope.valid && $rootScope.userId === userId) {\n\t    return {\n\t      restrict: 'E',\n\t      template: '<button type=\"button\" class=\"btn btn-primary\" ng-show=\"auth===true\" ui-sref=\"edit\" ng-click=\"go(\\'edit\\')\">Edit Post</button>'\n\t\t}\n\t} else {\n\t\treturn {\n\t\t\trestrict: 'E'\n\t\t}\n\t}\n  })\n  .directive(\"optionalbuttons\", function($rootScope) {\n\t// ng-click=\"go(\\'suspendpost\\')\"\n  \tif($rootScope.valid && $rootScope.isAdmin === true) {\n\t    return {\n\t      restrict: 'E',\n\t      template: '<button type=\"button\" class=\"btn btn-danger\" ng-show=\"auth===true\" ui-sref=\"edit\">Suspend Post</button>'\n\t\t}\n\t} else {\n\t\treturn {\n\t\t\trestrict: 'E'\n\t\t}\n\t}\n  });","angular.module('stream.post_details', [])\n\n.factory('PostDetails', function($http) {\n\n    return {\n    \t// get a single post by id\n    \tget: function(id) {\n    \t\treturn $http.get('/api/v1/post/'+id);\n    \t}\n\n    }\n\n});","angular.module('stream.post_listc', [])\n\n.controller('post_listCtrl', function($scope, $rootScope, PostList) {\n\t\n  \t// reset overlay\n\t$('.stream.overlay').hide();\n\t$('body').removeClass('hide-interface');\n\t      \n \t// save previous state\n\t$rootScope.previousState = \"i\";\n    \n    $scope.page.loaded = false;\n        \n    PostList.getPosts()\n        .success(function(data) {\n            $scope.posts = data;\n            $scope.page.loaded = true;\n            $(\".ng-panel\").css(\"height\",\"auto\");\n        });\n\t\n});","angular.module('stream.post_list', [])\n\n.factory('PostList', function($http) {\n\n    return {\n        \n        // paginate posts\n        getPosts : function() {\n            return $http.get('/api/v1/post');\n        }\n\n    }\n\n});"],"sourceRoot":"/source/"}